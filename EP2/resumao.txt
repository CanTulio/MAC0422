vai tomar no cu alan


- Acresente uma nova fila ao escalonador (BATCH_Q)
    - Colocada entre fila IDLE e processos de usuario
    - Essa fila deverá operar em sistema de batch.
- Implemente novas CHAMADAS DE SISTEMA:
    - batch(PID) : coloca processo PID em BATCH_Q.
    - unbatch(PID) : tira o processo PID em BATCH_Q.
    * ambos só podem ser chamados do processo pai.

- Como funciona o BATCH_Q?
    - Nenhum processo em BATCH_Q pode mudar de fila.
    - Um processo *novo* nessa fila deve rodar até que 
    o total de tiques(?) seja o mesmo do processo com 
    menor númer de tiques na fila.
    - Quando todos os processos tiverem o mesmo numero de tiques, opere em round robin.
    - Processos nessa fila só rodam quando a maquina estiver
    ociosa


DICA VALIOSÍSSIMA SEI ESCREVER ESSA PALAVRA CARALHO
QUERO TRANCAR SO : 
    - Ao implementar uma nova chamada de sistema, precisamos
    criar uma nova rotina na biblioteca de sistemas. Essa rotina
    transformará nossa chamada de sistemas em uma mensagem para o process manager


---------------------------------------------------


"Adicione uma nova fila ao escalonador" 

    - Isso basicamente quer dizer que devemos aumentar a prioridade minima (que atualmente é 15 no minix). Essa prioridade nova deve ser entre 15 e 7, ou seja, [15,7).

"Adicione uma chamada de sistema batch(PID)"
    - Seria analogo ao Enqueue, mas pra essa fila em especifico! É só questão de inserir na lista

"Adicione uma chamada de sistema unbatch(PID)"
    -Analogo ao deque, mas pra essa fila em específico.

-----------------------------------



Fase 2 :

PASSOS : 
    - Criar a chamada de sistema
        - Crio um id de chamada de sistema em /usr/servers/pm/proto.h
             - PRocuro um id que não é usado e coloco ali o nome do meu  syscall handler
        - Defino o prototipo do handler em /usr/servers/pm/misc.c
        - Para chamar o handler basta fazer

            message m;
            _syscall(PS, ID, &m);

            Sendo ID o id definido da syscall no proto.h;

            Pra passar parametros pro syscall, temos que incluir lib.h e fazer

            m.m1_i1 = bla;
            m.m1_i2 = ble;
            .
            .
            .
            _syscall(PS, IDm &m);
        
        - Criando uma Função de user library.
            - Crie um #define para mapear o numero da chamada de sistema para a função de handler. Faça isso no arquivo /usr/src/include/minix/callnr.h e /usr/include/minix/callnr.h
                #define BATCH ID
                
            - cria-se um arquivo chamado _batch.c, e coloque em /usr/src/lib/posix
            -
    - Setar a prioridade de processos que entram pra ser igual a 15.
Duvidas 


- 